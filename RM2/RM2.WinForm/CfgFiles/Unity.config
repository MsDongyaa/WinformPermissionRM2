<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration"/>
  </configSections>
  <unity>
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Unity.Interception.Configuration"/>
    <containers>
      <container name="aopContainer">
        <extension type="Interception"/>
        <register type="RM2.Framework.IceAop.IAopBehavior,RM2.Framework" mapTo="RM2.Framework.IceAop.TestAopBehavior,RM2.Framework">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="RM2.Framework.IceAop.IceExceptionBehavior, RM2.Framework"/>
        </register>
        <register type="RM2.IService.IUserService,RM2.IService" mapTo="RM2.Service.UserService,RM2.Service">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="RM2.Framework.IceAop.IceExceptionBehavior, RM2.Framework"/>
        </register>


        <register type="RM2.IService.IUserService,RM2.ILogService" mapTo="RM2.Service.UserService,RM2.LogService">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="RM2.Framework.IceAop.IceExceptionBehavior, RM2.Framework"/>
        </register>


        <register type="RM2.IService.IUserService,RM2.IMenuService" mapTo="RM2.Service.UserService,RM2.MenuService">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="RM2.Framework.IceAop.IceExceptionBehavior, RM2.Framework"/>
        </register>



        <register type="RM2.IService.IUserService,RM2.IRoleService" mapTo="RM2.Service.UserService,RM2.RoleService">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="RM2.Framework.IceAop.IceExceptionBehavior, RM2.Framework"/>
        </register>


      </container>
    </containers>
  </unity>
</configuration>